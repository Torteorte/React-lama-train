{"version":3,"sources":["Validators/validators.js","components/common/FormControls/FormsControl.jsx","components/common/FormControls/FormsControl.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["required","value","requiredWriteSomething","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","TextArea","restProps","Input","module","exports","LoginReduxForm","reduxForm","form","handleSubmit","action","onSubmit","component","name","type","placeholder","validate","checkBox","connect","state","isAuth","auth","login","to","loginPage","formData","console","log","Email","Password","RememberMe"],"mappings":"8FAAA,sGAAO,IAAMA,EAAW,SAACC,GACtB,IAAIA,EACJ,MAAO,qBAGGC,EAAyB,SAACD,GACpC,IAAIA,EACJ,MAAO,KAGGE,EAAmB,SAACC,GAAD,OAAe,SAACH,GAC7C,GAAIA,EAAMI,OAASD,EAChB,MAAM,iBAAN,OAAwBA,EAAxB,e,mOCTAE,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,kBAEnDC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEpC,OACG,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,IAAtE,UACG,8BACIJ,EAAMQ,WAETT,EAAKI,SAAW,+BAAOJ,EAAKK,YAKzBK,EAAW,SAACT,GACtB,IAAQF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MAArB,YAA6CD,EAA7C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,oDAAcF,GAAWY,IAAlD,SAGGC,EAAQ,SAACX,GACnB,IAAQF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MAArB,YAA6CD,EAA7C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,iDAAWF,GAAWY,IAA/C,U,oBCvBVE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,oBCA1ED,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,0B,iCCDlE,oGA4CMC,EAAiBC,YAAU,CAC9BC,KAAM,SADcD,EAnCL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcb,EAAY,EAAZA,MAChC,OACG,uBAAMc,OAAO,GAAGC,SAAUF,EAA1B,UACG,8BACG,cAAC,IAAD,CACGG,UAAWT,IACXU,KAAM,QACNC,KAAM,OACNC,YAAa,QACbC,SAAU,CAACjC,SAEjB,8BACG,cAAC,IAAD,CACG6B,UAAWT,IACXU,KAAM,WACNC,KAAM,WACNC,YAAa,WACbC,SAAU,CAACjC,SAEjB,gCACG,cAAC,IAAD,CACG6B,UAAW,QACXC,KAAM,aACNC,KAAM,aAJZ,IAI2B,sBAAMjB,UAAWC,IAAOmB,SAAxB,4BAE1BrB,GAAS,8BACNA,IAEJ,8BACG,mDAiCGsB,uBANO,SAACC,GACpB,MAAO,CACJC,OAAQD,EAAME,KAAKD,UAIe,CAAEE,WAA3BJ,EAvBD,SAAC1B,GAOZ,OAAIA,EAAM4B,OACA,cAAC,IAAD,CAAUG,GAAI,aAGjB,sBAAK1B,UAAWC,IAAO0B,UAAvB,UACJ,uCACA,cAAClB,EAAD,CAAgBK,SAXF,SAACc,GACfC,QAAQC,IAAIF,GACZjC,EAAM8B,MAAMG,EAASG,MAAOH,EAASI,SAAUJ,EAASK","file":"static/js/6.ac085403.chunk.js","sourcesContent":["export const required = (value) => {\r\n   if (value) return undefined\r\n   return \"Field is required\"\r\n}\r\n\r\nexport const requiredWriteSomething = (value) => {\r\n   if (value) return undefined\r\n   return \" \"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) {\r\n      return `Max length is ${maxLength} symbols`\r\n   }\r\n   return undefined\r\n}","import styles from './FormsControl.module.css'\r\n\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n   let hasError = meta.touched && meta.error\r\n\r\n   return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {meta.touched && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3vb6c\",\"error\":\"FormsControl_error__3Krxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__26GOD\",\"checkBox\":\"Login_checkBox__3Df8D\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth_reducer'\r\nimport { required } from '../../Validators/validators'\r\nimport { Input } from '../common/FormControls/FormsControl'\r\nimport { Redirect } from \"react-router\";\r\nimport styles from './Login.module.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n   return (\r\n      <form action=\"\" onSubmit={handleSubmit}>\r\n         <div>\r\n            <Field\r\n               component={Input}\r\n               name={\"Email\"}\r\n               type={\"text\"}\r\n               placeholder={\"Email\"}\r\n               validate={[required]} />\r\n         </div>\r\n         <div>\r\n            <Field\r\n               component={Input}\r\n               name={\"Password\"}\r\n               type={\"password\"}\r\n               placeholder={\"Password\"}\r\n               validate={[required]} />\r\n         </div>\r\n         <div>\r\n            <Field\r\n               component={\"input\"}\r\n               name={\"RememberMe\"}\r\n               type={\"checkbox\"} /> <span className={styles.checkBox}>Remember Me</span>\r\n         </div>\r\n         {error && <div>\r\n            {error}\r\n         </div>}\r\n         <div>\r\n            <button>Login</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n   form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n   const onSubmit = (formData) => {\r\n      console.log(formData)\r\n      props.login(formData.Email, formData.Password, formData.RememberMe);\r\n   }\r\n\r\n   if (props.isAuth) {\r\n      return <Redirect to={\"/profile\"} />\r\n   }\r\n\r\n   return <div className={styles.loginPage}>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n   </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}