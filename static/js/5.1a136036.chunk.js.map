{"version":3,"sources":["components/common/FormControls/FormsControl.jsx","components/common/FormControls/FormsControl.module.css","Validators/validators.js","components/common/ButtonGreen/ButtonGreen.jsx","components/common/ButtonGreen/Buttons.module.css","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","TextArea","restProps","Input","createField","component","name","type","placeholder","validators","text","validate","module","exports","required","value","requiredWriteSomething","maxLengthCreator","maxLength","length","ButtonGreen","buttonGreen","textButton","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","to","id","dialog","src","alt","Message","message","maxLength50","MessageReduxForm","reduxForm","form","sendMessage","action","onSubmit","handleSubmit","Field","newMessageText","Dialogs","dialogsElements","dialogsData","map","messagesElements","messagesData","mes","dialogs","dialogsItems","messages","values","sendMessageAC","compose","Component","RedirectComponent","this","React","connect","dialogsPage"],"mappings":"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","file":"static/js/5.1a136036.chunk.js","sourcesContent":["import styles from './FormsControl.module.css'\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n   let hasError = meta.touched && meta.error\r\n\r\n   return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {meta.touched && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n\r\nexport const createField = (component, name, type, placeholder, validators, text = \"\", props = {}) => (\r\n   <div>\r\n      <Field\r\n         component={component}\r\n         name={name}\r\n         type={type}\r\n         placeholder={placeholder}\r\n         validate={validators}\r\n         {...props}\r\n      /> {text}\r\n   </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3vb6c\",\"error\":\"FormsControl_error__3Krxq\"};","export const required = (value) => {\r\n   if (value) return undefined\r\n   return \"Field is required\"\r\n}\r\n\r\nexport const requiredWriteSomething = (value) => {\r\n   if (value) return undefined\r\n   return \" \"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) {\r\n      return `Max length is ${maxLength} symbols`\r\n   }\r\n   return undefined\r\n}","import styles from './Buttons.module.css'\r\n\r\nconst ButtonGreen = (props) => {\r\n   return (\r\n      <div>\r\n         <button className={styles.buttonGreen}>{props.textButton}</button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ButtonGreen","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGreen\":\"Buttons_buttonGreen__1cbZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__w4wQk\",\"dialogsItems\":\"Dialogs_dialogsItems__2z3A6\",\"dialog\":\"Dialogs_dialog__10H4p\",\"messages\":\"Dialogs_messages__2fyck\",\"message\":\"Dialogs_message__1da__\",\"sendMessage\":\"Dialogs_sendMessage__23Mxe\",\"sendMessageButton\":\"Dialogs_sendMessageButton__2mQ3J\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return connectedAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n   return (\r\n      <div>\r\n         <NavLink to={`/dialogs/${props.id}`} className={styles.dialog}>\r\n            <img src={props.src} alt=\"avatar\" />\r\n            <p>{props.name}</p>\r\n         </NavLink>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={styles.message}>{props.message}</div>\r\n   )\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredWriteSomething } from \"../../Validators/validators\";\r\nimport { TextArea } from \"../common/FormControls/FormsControl\";\r\nimport ButtonGreen from \"../common/ButtonGreen/ButtonGreen\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   let dialogsElements = props.dialogsData\r\n      .map(dialog => <DialogItem name={dialog.name} id={dialog.id} src={dialog.src} key={dialog.id} />)\r\n\r\n   let messagesElements = props.messagesData\r\n      .map(mes => <Message message={mes.message} id={mes.id} key={mes.id} />)\r\n\r\n   let addNewMessage = (values) => {\r\n      props.sendMessageAC(values.newMessageText)\r\n   }\r\n\r\n   if (!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n   return (\r\n      <div className={styles.dialogs}>\r\n         <div className={styles.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n\r\n         <div className={styles.messages}>\r\n            {messagesElements}\r\n            <MessageReduxForm onSubmit={addNewMessage} />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <div className={styles.sendMessage}>\r\n         <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <Field\r\n               component={TextArea}\r\n               name=\"newMessageText\"\r\n               value={props.newMessageText}\r\n               placeholder=\"Enter your message\"\r\n               validate={[requiredWriteSomething, maxLength50]} />\r\n            <ButtonGreen textButton=\"Send\" />\r\n\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n   form: 'AddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","// import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageAC } from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      messagesData: state.dialogsPage.messagesData,\r\n      dialogsData: state.dialogsPage.dialogsData,\r\n      newMessageText: state.dialogsPage.newMessageText\r\n   }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//    return {\r\n//       sendMessage: (newMessageBody) => {\r\n//          dispatch(sendMessageAC(newMessageBody))\r\n//       }\r\n//    }\r\n// }\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, { sendMessageAC })\r\n)(Dialogs)"],"sourceRoot":""}