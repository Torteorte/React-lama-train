{"version":3,"sources":["components/common/FormControls/FormsControl.jsx","components/common/FormControls/FormsControl.module.css","Validators/validators.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","TextArea","restProps","Input","createField","component","name","type","placeholder","validators","text","validate","module","exports","required","value","requiredWriteSomething","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","action","onSubmit","checkBox","connect","state","isAuth","auth","login","to","loginPage","formData","console","log","Email","Password","RememberMe"],"mappings":"2UAGMA,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,kBAEnDC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEpC,OACG,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,IAAtE,UACG,8BACIJ,EAAMQ,WAETT,EAAKI,SAAW,+BAAOJ,EAAKK,YAKzBK,EAAW,SAACT,GACtB,IAAQF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MAArB,YAA6CD,EAA7C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,oDAAcF,GAAWY,IAAlD,SAGGC,EAAQ,SAACX,GACnB,IAAQF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MAArB,YAA6CD,EAA7C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,iDAAWF,GAAWY,IAA/C,SAIGE,EAAc,SAACC,EAAWC,EAAMC,EAAMC,EAAaC,GAArC,IAAiDC,EAAjD,uDAAwD,GAAIlB,EAA5D,uDAAoE,GAApE,OACxB,gCACG,cAAC,IAAD,aACGa,UAAWA,EACXC,KAAMA,EACNC,KAAMA,EACNC,YAAaA,EACbG,SAAUF,GACNjB,IAPV,IAQOkB,O,oBCpCVE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCD1E,sGAAO,IAAMC,EAAW,SAACC,GACtB,IAAIA,EACJ,MAAO,qBAGGC,EAAyB,SAACD,GACpC,IAAIA,EACJ,MAAO,KAGGE,EAAmB,SAACC,GAAD,OAAe,SAACH,GAC7C,GAAIA,EAAMI,OAASD,EAChB,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCXNN,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,0B,iCCDlE,oGAkCMO,EAAiBC,YAAU,CAC9BC,KAAM,SADcD,EAzBL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAc3B,EAAY,EAAZA,MAChC,OACG,uBAAM4B,OAAO,GAAGC,SAAUF,EAA1B,UACG,8BACInB,YAAYD,IAAO,QAAS,OAAQ,QAAS,CAACW,QAElD,8BACIV,YAAYD,IAAO,WAAY,WAAY,WAAY,CAACW,QAE5D,gCACG,cAAC,IAAD,CACGT,UAAW,QACXC,KAAM,aACNC,KAAM,aAJZ,IAI2B,sBAAMV,UAAWC,IAAO4B,SAAxB,4BAE1B9B,GAAS,8BACNA,IAEJ,8BACG,mDAiCG+B,uBANO,SAACC,GACpB,MAAO,CACJC,OAAQD,EAAME,KAAKD,UAIe,CAAEE,WAA3BJ,EAvBD,SAACnC,GAOZ,OAAIA,EAAMqC,OACA,cAAC,IAAD,CAAUG,GAAI,aAGjB,sBAAKnC,UAAWC,IAAOmC,UAAvB,UACJ,uCACA,cAACb,EAAD,CAAgBK,SAXF,SAACS,GACfC,QAAQC,IAAIF,GACZ1C,EAAMuC,MAAMG,EAASG,MAAOH,EAASI,SAAUJ,EAASK","file":"static/js/6.48491d62.chunk.js","sourcesContent":["import styles from './FormsControl.module.css'\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n   let hasError = meta.touched && meta.error\r\n\r\n   return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {meta.touched && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n\r\nexport const createField = (component, name, type, placeholder, validators, text = \"\", props = {}) => (\r\n   <div>\r\n      <Field\r\n         component={component}\r\n         name={name}\r\n         type={type}\r\n         placeholder={placeholder}\r\n         validate={validators}\r\n         {...props}\r\n      /> {text}\r\n   </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3vb6c\",\"error\":\"FormsControl_error__3Krxq\"};","export const required = (value) => {\r\n   if (value) return undefined\r\n   return \"Field is required\"\r\n}\r\n\r\nexport const requiredWriteSomething = (value) => {\r\n   if (value) return undefined\r\n   return \" \"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) {\r\n      return `Max length is ${maxLength} symbols`\r\n   }\r\n   return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__26GOD\",\"checkBox\":\"Login_checkBox__3Df8D\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth_reducer'\r\nimport { required } from '../../Validators/validators'\r\nimport { createField, Input } from '../common/FormControls/FormsControl'\r\nimport { Redirect } from \"react-router\";\r\nimport styles from './Login.module.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n   return (\r\n      <form action=\"\" onSubmit={handleSubmit}>\r\n         <div>\r\n            {createField(Input, \"Email\", \"text\", \"Email\", [required])}\r\n         </div>\r\n         <div>\r\n            {createField(Input, \"Password\", \"password\", \"Password\", [required])}\r\n         </div>\r\n         <div>\r\n            <Field\r\n               component={\"input\"}\r\n               name={\"RememberMe\"}\r\n               type={\"checkbox\"} /> <span className={styles.checkBox}>Remember Me</span>\r\n         </div>\r\n         {error && <div>\r\n            {error}\r\n         </div>}\r\n         <div>\r\n            <button>Login</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n   form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n   const onSubmit = (formData) => {\r\n      console.log(formData)\r\n      props.login(formData.Email, formData.Password, formData.RememberMe);\r\n   }\r\n\r\n   if (props.isAuth) {\r\n      return <Redirect to={\"/profile\"} />\r\n   }\r\n\r\n   return <div className={styles.loginPage}>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n   </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}