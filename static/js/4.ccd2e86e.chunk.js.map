{"version":3,"sources":["components/common/FormControls/FormsControl.jsx","Validators/validators.js","components/common/FormControls/FormsControl.module.css","components/common/ButtonGreen/ButtonGreen.jsx","components/common/ButtonGreen/ButtonGreen.module.css","hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/Contacts/Contacts.module.css","components/Profile/ProfileInfo/ProfileStatusHook/ProfileStatusHook.module.css","components/Profile/ProfileInfo/ProfileDataForm.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/img/facebook.svg","assets/img/vk.svg","assets/img/twitter.svg","assets/img/instagram.svg","assets/img/youtube.svg","assets/img/github.svg","components/Profile/ProfileInfo/Contacts/Contacts.jsx","components/Profile/ProfileInfo/ProfileStatusHook/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","assets/img/photo-camera.svg","components/Profile/ProfileInfo/ProfileInfo.jsx","assets/img/heart-icon_34407.ico","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","TextArea","restProps","Input","createField","component","name","type","placeholder","validators","text","validate","required","value","requiredWriteSomething","maxLengthCreator","maxLength","length","module","exports","ButtonGreen","buttonGreen","textButton","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Contacts","isContact","propsSocial","social","target","rel","href","src","alt","contacts","facebook","vk","twitter","instagram","youtube","github","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","onChange","e","onBlur","updateStatus","autoFocus","ProfileDataReduxForm","reduxForm","form","action","onSubmit","handleSubmit","formInfo","formItem","Field","checkBox","contactsItems","keys","profile","map","key","toLocaleLowerCase","buttonSave","ButtonGrey","formSummaryError","ProfileData","personInfo","aboutMe","lookingForAJob","lookingForAJobDescription","Edit","onClick","goToEditMode","ProfileInfo","preloaderProfile","Preloader","fotoLarge","avatar","photos","large","userDefaultPhoto","inputAvatar","files","savePhoto","id","htmlFor","avatarFileInput","uploadImage","mainInfo","NameStatus","fullName","initialValues","formData","saveProfile","then","Post","item","avatarMessage","message","likes","heart","likesCounts","maxLength10","MyPostReduxForm","newPostText","MyPosts","PostsElements","postsData","post","myPosts","values","addPostAC","posts","MyPostsContainer","profilePage","Profile","content","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","componentRender","prevProps","prevState","savePhotoAC","compose","withRouter"],"mappings":"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","file":"static/js/4.ccd2e86e.chunk.js","sourcesContent":["import styles from './FormsControl.module.css'\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n   let hasError = meta.touched && meta.error\r\n\r\n   return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (component, name, type, placeholder, validators, text = \"\", props = {}) => (\r\n   <div>\r\n      <Field\r\n         component={component}\r\n         name={name}\r\n         type={type}\r\n         placeholder={placeholder}\r\n         validate={validators}\r\n         {...props}\r\n      /> {text}\r\n   </div>\r\n)","export const required = (value) => {\r\n   if (value) return undefined\r\n   return \"Field is required\"\r\n}\r\n\r\nexport const requiredWriteSomething = (value) => {\r\n   if (value) return undefined\r\n   return \" \"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) {\r\n      return `Max length is ${maxLength} symbols`\r\n   }\r\n   return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3vb6c\",\"error\":\"FormsControl_error__3Krxq\"};","import styles from './ButtonGreen.module.css'\r\n\r\nconst ButtonGreen = (props) => {\r\n   return (\r\n      <div>\r\n         <button className={styles.buttonGreen}>{props.textButton}</button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ButtonGreen","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGreen\":\"ButtonGreen_buttonGreen__1YwX4\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return connectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3v5ae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderProfile\":\"ProfileInfo_preloaderProfile__1tIDc\",\"fotoLarge\":\"ProfileInfo_fotoLarge__tcTm7\",\"avatar\":\"ProfileInfo_avatar__1K77l\",\"inputAvatar\":\"ProfileInfo_inputAvatar__3PwOY\",\"avatarFileInput\":\"ProfileInfo_avatarFileInput__3ciPN\",\"upload-file__input\":\"ProfileInfo_upload-file__input__2eblL\",\"mainInfo\":\"ProfileInfo_mainInfo__aYcwe\",\"NameStatus\":\"ProfileInfo_NameStatus__2e5os\",\"personInfo\":\"ProfileInfo_personInfo__3_iSt\",\"aboutMe\":\"ProfileInfo_aboutMe__2e6nF\",\"Edit\":\"ProfileInfo_Edit__cNAS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__3MOf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatusHook_status__HvCHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInfo\":\"ProfileDataForm_formInfo__3RJdz\",\"formItem\":\"ProfileDataForm_formItem__1n--G\",\"checkBox\":\"ProfileDataForm_checkBox__1ViLR\",\"contactsItems\":\"ProfileDataForm_contactsItems__C7YiQ\",\"buttonSave\":\"ProfileDataForm_buttonSave__1EAK9\",\"formSummaryError\":\"ProfileDataForm_formSummaryError__3acAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3U-_g\",\"posts\":\"MyPosts_posts__1FSe-\",\"clearButton\":\"MyPosts_clearButton__hXfGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2p-7y\",\"avatarMessage\":\"Post_avatarMessage__ecrmO\",\"message\":\"Post_message__2H72d\",\"likes\":\"Post_likes__33Wrd\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/facebook.6aa98d32.svg\";","export default __webpack_public_path__ + \"static/media/vk.8e9ac5f1.svg\";","export default __webpack_public_path__ + \"static/media/twitter.16ec4858.svg\";","export default __webpack_public_path__ + \"static/media/instagram.02967a62.svg\";","export default __webpack_public_path__ + \"static/media/youtube.a166d430.svg\";","export default __webpack_public_path__ + \"static/media/github.b1997d6c.svg\";","import facebook from './../../../../assets/img/facebook.svg'\r\nimport vk from './../../../../assets/img/vk.svg'\r\nimport twitter from './../../../../assets/img/twitter.svg'\r\nimport instagram from './../../../../assets/img/instagram.svg'\r\nimport youtube from './../../../../assets/img/youtube.svg'\r\nimport github from './../../../../assets/img/github.svg'\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst Contacts = (props) => {\r\n\r\n   let isContact = (propsSocial, social) => {\r\n      return (propsSocial && <a target=\"_blank\" rel=\"noreferrer\" href={propsSocial} > <img src={social} alt={`${social}-link`} /></a >)\r\n   }\r\n\r\n   return <div className={styles.contacts}>\r\n      {isContact(props.contacts.facebook, facebook)}\r\n      {isContact(props.contacts.vk, vk)}\r\n      {isContact(props.contacts.twitter, twitter)}\r\n      {isContact(props.contacts.instagram, instagram)}\r\n      {isContact(props.contacts.youtube, youtube)}\r\n      {isContact(props.contacts.github, github)}\r\n   </div>\r\n}\r\n\r\nexport default Contacts","import React, { useState, useEffect } from 'react';\r\nimport styles from \"./ProfileStatusHook.module.css\";\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false)\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   let activatedEditMode = () => {\r\n      setEditMode(true)\r\n   }\r\n\r\n   let deActivatedEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateStatus(status)\r\n   }\r\n\r\n   let onStatusChange = (e) => {\r\n      setStatus(e.target.value)\r\n   }\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n   return (\r\n      <div className={styles.status}>\r\n         {!editMode &&\r\n            <div>\r\n               <span onDoubleClick={props.isOwner && activatedEditMode} >{props.status || \"--\"}</span>\r\n            </div>\r\n         }\r\n         {editMode &&\r\n            <div>\r\n               <input onChange={onStatusChange} onBlur={deActivatedEditMode} value={status} autoFocus type=\"text\" />\r\n            </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileStatusHook\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import styles from \"./ProfileInfo.module.css\";\r\n\r\n// class ProfileStatus extends React.Component {\r\n\r\n//    state = {\r\n//       editMode: false,\r\n//       status: this.props.status\r\n//    }\r\n\r\n//    activatedEditMode = () => {\r\n//       this.setState({\r\n//          editMode: true\r\n//       })\r\n//    }\r\n\r\n//    deActivatedEditMode = () => {\r\n//       this.setState({\r\n//          editMode: false\r\n//       })\r\n//       this.props.updateStatus(this.state.status)\r\n//    }\r\n\r\n//    onStatusChange = (e) => {\r\n//       this.setState({\r\n//          status: e.target.value\r\n//       })\r\n//    }\r\n\r\n//    componentDidUpdate(prevProps, prevStatus) {\r\n//       if (prevProps.status !== this.props.status) {\r\n//          this.setState({\r\n//             status: this.props.status\r\n//          })\r\n//       }\r\n//    }\r\n\r\n//    render() {\r\n//       return (\r\n//          <div className={styles.status}>\r\n//             {!this.state.editMode &&\r\n//                <div>\r\n//                   <span onDoubleClick={this.activatedEditMode} >{this.props.status || \"--\"}</span>\r\n//                </div>\r\n//             }\r\n//             {this.state.editMode &&\r\n//                <div>\r\n//                   <input onChange={this.onStatusChange} autoFocus onBlur={this.deActivatedEditMode} type=\"text\" value={this.state.status} />\r\n//                </div>\r\n//             }\r\n//          </div>\r\n//       )\r\n//    }\r\n\r\n// }\r\n\r\n// export default ProfileStatus","import React from 'react';\r\nimport styles from \"./ProfileDataForm.module.css\";\r\nimport { createField, Input, TextArea } from '../../common/FormControls/FormsControl';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport ButtonGrey from './../../common/ButtonGrey/ButtonGrey'\r\nimport { required } from './../../../Validators/validators'\r\n\r\nconst ProfileDataForm = (props) => {\r\n   return (\r\n      <form action=\"\" onSubmit={props.handleSubmit} className={styles.formInfo}>\r\n         <h2>Редактирование информации</h2>\r\n         <div className={styles.formItem}>\r\n            <b>Полное Имя: </b>{createField(Input, \"fullName\", \"text\", \"Full Name\", [required])}\r\n         </div>\r\n\r\n         <div className={styles.formItem}>\r\n            <b>About me: </b>\r\n            {createField(TextArea, \"aboutMe\", \"text\", \"About Me\", [required])}\r\n         </div>\r\n         <div className={styles.formItem}>\r\n            <b>Looking for a job:</b>\r\n            <Field\r\n               component={\"input\"}\r\n               name={\"lookingForAJob\"}\r\n               type={\"checkbox\"} /> <span className={styles.checkBox}>Yes</span>\r\n            {/* {createField(Input, \"lookingForAJob\", \"checkbox\", \"lookingForAJob\", null, \"Yes\")} */}\r\n         </div>\r\n\r\n         <div className={styles.formItem}>\r\n            <b>My professional skills:</b> {createField(TextArea, \"lookingForAJobDescription\", \"text\", \"My Skills\", [required])}\r\n         </div>\r\n         <div>\r\n            <b>Контакты:</b>\r\n            <div className={` ${styles.contactsItems}`}>\r\n               {Object.keys(props.profile.contacts).map(key => {\r\n                  return <div className={styles.formItem} key={key}>\r\n                     <b>{key}:</b> {createField(Input, \"contacts.\" + key.toLocaleLowerCase(), key)}\r\n                  </div>\r\n               })}\r\n            </div>\r\n         </div>\r\n         <div className={styles.buttonSave} ><ButtonGrey textButton=\"Сохранить изменения\" /></div>\r\n         {props.error && <div className={styles.formSummaryError}>\r\n            {props.error}\r\n         </div>\r\n         }\r\n      </form>\r\n   )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n   form: 'editProfile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm","export default __webpack_public_path__ + \"static/media/photo-camera.6339753c.svg\";","import React, { useState } from 'react';\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from './../../common/Preloader/Preloader';\r\nimport Contacts from './Contacts/Contacts';\r\nimport ProfileStatusHook from './ProfileStatusHook/ProfileStatusHook';\r\nimport userDefaultPhoto from '../../../assets/img/defaultPhoto.jpg'\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ButtonGrey from '../../common/ButtonGrey/ButtonGrey';\r\nimport uploadImage from './../../../assets/img/photo-camera.svg'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return (\r\n            <div className={styles.preloaderProfile}>\r\n                <Preloader />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let onChangeMainFoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.fotoLarge}>\r\n                <img src=\"https://city.diia.gov.ua/assets/img/pages/city.jpg\" alt=\"big background foto\" />\r\n                <div className={styles.avatar}>\r\n                    <img src={props.profile.photos.large || userDefaultPhoto} alt=\"avatar-foto\" />\r\n                </div>\r\n                <div >\r\n                    {props.isOwner && <div>\r\n                        <input className={styles.inputAvatar} type={\"file\"} name={\"myfile\"} onChange={onChangeMainFoto} id=\"avatarFile\" />\r\n                        <label htmlFor=\"avatarFile\" className={styles.avatarFileInput}>\r\n                            <img src={uploadImage} alt=\"avatar\" />\r\n                        </label>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <div className={styles.mainInfo}>\r\n                <div className={styles.NameStatus}>\r\n                    <h1>{props.profile.fullName}</h1>\r\n                    <ProfileStatusHook status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} />\r\n                </div>\r\n            </div>\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n                : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={props.profile} isOwner={props.isOwner} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div className={styles.personInfo}>\r\n\r\n            <b>Краткая информация: </b>\r\n            <div className={styles.aboutMe}>\r\n                {props.profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Поиск работы:</b> {props.profile.lookingForAJob ? \"да\" : \"нет\"}\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n                <div>\r\n                    <b>Мои профессиональные навыки:</b> {props.profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>Контакты:</b>\r\n                <Contacts contacts={props.profile.contacts} />\r\n            </div>\r\n            {props.isOwner && <div className={styles.Edit}> <img src=\"https://img.icons8.com/ios/100/000000/pencil--v1.png\" alt=\"edit\" /> <ButtonGrey onClick={props.goToEditMode} textButton=\"Редактировать профиль\" /></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","export default __webpack_public_path__ + \"static/media/heart-icon_34407.fe2a17a6.ico\";","import React from 'react';\r\nimport styles from \"./Post.module.css\";\r\nimport heart from './../../../../assets/img/heart-icon_34407.ico'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <div className={styles.avatarMessage}>\r\n                <img src=\"https://image.flaticon.com/icons/png/512/147/147142.png\" alt=\"avatar icon\" />\r\n                <span className={styles.message}>{props.message}</span>\r\n            </div>\r\n\r\n            <div>\r\n                <span className={styles.likes}> <img src={heart} alt=\"likes\" /></span> {props.likesCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredWriteSomething } from '../../../Validators/validators';\r\nimport { TextArea } from '../../common/FormControls/FormsControl';\r\nimport ButtonGreen from '../../common/ButtonGreen/ButtonGreen';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let PostsElements = props.postsData\r\n        .map(post => <Post message={post.message} likesCounts={post.likesCounts} id={post.id} key={post.id} />)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPostAC(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myPosts}>\r\n            <h3>My posts</h3>\r\n\r\n            <MyPostReduxForm onSubmit={addNewPost} />\r\n\r\n            <div className={styles.posts}>\r\n                {PostsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        component={TextArea}\r\n                        name=\"newPostText\"\r\n                        value={props.newPostText}\r\n                        validate={[requiredWriteSomething, maxLength10]} />\r\n                </div>\r\n                <ButtonGreen textButton=\"Add post\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'MyPostForm'\r\n})(MyPostsForm)\r\n\r\nexport default MyPosts","// import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostAC } from '../../../redux/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      postsData: state.profilePage.postsData,\r\n      newPostText: state.profilePage.newPostText\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPostAC })(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport styles from \"./Profile.module.css\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getStatus, updateStatus, savePhotoAC, saveProfile } from '../../redux/profile_reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentRender() {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId\r\n         if (!userId) {\r\n            this.props.history.push(\"/login\")\r\n         }\r\n      }\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.componentRender()\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n         this.componentRender()\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props}\r\n         isOwner={!this.props.match.params.userId}\r\n         profile={this.props.profile}\r\n         status={this.props.status}\r\n         updateStatus={this.props.updateStatus}\r\n         savePhoto={this.props.savePhotoAC} />\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.id,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhotoAC, saveProfile }),\r\n   withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}