{"version":3,"sources":["Validators/validators.js","components/common/FormControls/FormsControl.jsx","components/common/FormControls/FormsControl.module.css","components/common/ButtonGreen/ButtonGreen.jsx","components/common/ButtonGreen/Buttons.module.css","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","requiredWriteSomething","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","TextArea","restProps","Input","module","exports","ButtonGreen","buttonGreen","textButton","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","to","id","dialog","src","alt","name","Message","message","maxLength50","MessageReduxForm","reduxForm","form","sendMessage","action","onSubmit","handleSubmit","Field","component","newMessageText","placeholder","validate","Dialogs","dialogsElements","dialogsData","map","messagesElements","messagesData","mes","dialogs","dialogsItems","messages","values","sendMessageAC","compose","Component","RedirectComponent","this","React","connect","dialogsPage"],"mappings":"8FAAA,sGAAO,IAAMA,EAAW,SAACC,GACtB,IAAIA,EACJ,MAAO,qBAGGC,EAAyB,SAACD,GACpC,IAAIA,EACJ,MAAO,KAGGE,EAAmB,SAACC,GAAD,OAAe,SAACH,GAC7C,GAAIA,EAAMI,OAASD,EAChB,MAAM,iBAAN,OAAwBA,EAAxB,e,mOCTAE,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,kBAEnDC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEpC,OACG,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,IAAtE,UACG,8BACIJ,EAAMQ,WAETT,EAAKI,SAAW,+BAAOJ,EAAKK,YAKzBK,EAAW,SAACT,GACtB,IAAQF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MAArB,YAA6CD,EAA7C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,oDAAcF,GAAWY,IAAlD,SAGGC,EAAQ,SAACX,GACnB,IAAQF,EAAqCE,EAArCF,MAAuBY,GAAcV,EAA9BD,KAA8BC,EAAxBC,MAArB,YAA6CD,EAA7C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,iDAAWF,GAAWY,IAA/C,U,oBCvBVE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCD1E,6BAUeC,IARK,SAACd,GAClB,OACG,8BACG,wBAAQK,UAAWC,IAAOS,YAA1B,SAAwCf,EAAMgB,iB,oBCJvDJ,EAAOC,QAAU,CAAC,YAAc,+B,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,YAAc,6BAA6B,kBAAoB,qC,iICGtQI,EAA6B,SAACC,GAC/B,MAAO,CACJC,OAAQD,EAAME,KAAKD,S,kCCSVE,EAXI,SAACrB,GACjB,OACG,8BACG,eAAC,IAAD,CAASsB,GAAE,mBAActB,EAAMuB,IAAMlB,UAAWC,IAAOkB,OAAvD,UACG,qBAAKC,IAAKzB,EAAMyB,IAAKC,IAAI,WACzB,4BAAI1B,EAAM2B,aCCPC,EANC,SAAC5B,GACd,OACG,qBAAKK,UAAWC,IAAOuB,QAAvB,SAAiC7B,EAAM6B,W,6CCgCvCC,EAAcpC,YAAiB,IAmB/BqC,EAAmBC,YAAU,CAChCC,KAAM,kBADgBD,EAjBF,SAAChC,GACrB,OACG,qBAAKK,UAAWC,IAAO4B,YAAvB,SACG,uBAAMC,OAAO,GAAGC,SAAUpC,EAAMqC,aAAhC,UACG,cAACC,EAAA,EAAD,CACGC,UAAW9B,IACXkB,KAAK,iBACLnC,MAAOQ,EAAMwC,eACbC,YAAY,qBACZC,SAAU,CAACjD,IAAwBqC,KACtC,cAAChB,EAAA,EAAD,CAAaE,WAAW,iBAWrB2B,EAnDC,SAAC3C,GAEd,IAAI4C,EAAkB5C,EAAM6C,YACxBC,KAAI,SAAAtB,GAAM,OAAI,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMJ,GAAIC,EAAOD,GAAIE,IAAKD,EAAOC,KAAUD,EAAOD,OAEzFwB,EAAmB/C,EAAMgD,aACzBF,KAAI,SAAAG,GAAG,OAAI,cAAC,EAAD,CAASpB,QAASoB,EAAIpB,QAASN,GAAI0B,EAAI1B,IAAS0B,EAAI1B,OAMnE,OAAKvB,EAAMmB,OAGR,sBAAKd,UAAWC,IAAO4C,QAAvB,UACG,qBAAK7C,UAAWC,IAAO6C,aAAvB,SACIP,IAGJ,sBAAKvC,UAAWC,IAAO8C,SAAvB,UACIL,EACD,cAAChB,EAAD,CAAkBK,SAdP,SAACiB,GAClBrD,EAAMsD,cAAcD,EAAOb,yBAGJ,cAAC,IAAD,CAAUlB,GAAG,YCC3BiC,uBJbiB,SAACC,GAAe,IAEvCC,EAFsC,4JAGzC,WACG,OAAKC,KAAK1D,MAAMmB,OACT,cAACqC,EAAD,eAAeE,KAAK1D,QADI,cAAC,IAAD,CAAUsB,GAAG,eAJN,GAEZqC,IAAMH,WAStC,OAFqCI,YAAQ3C,EAAR2C,CAAoCH,KIMzEG,aAlBmB,SAAC1C,GACpB,MAAO,CACJ8B,aAAc9B,EAAM2C,YAAYb,aAChCH,YAAa3B,EAAM2C,YAAYhB,YAC/BL,eAAgBtB,EAAM2C,YAAYrB,kBAcZ,CAAEc,oBAFfC,CAGbZ","file":"static/js/5.b9b20e9c.chunk.js","sourcesContent":["export const required = (value) => {\r\n   if (value) return undefined\r\n   return \"Field is required\"\r\n}\r\n\r\nexport const requiredWriteSomething = (value) => {\r\n   if (value) return undefined\r\n   return \" \"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) {\r\n      return `Max length is ${maxLength} symbols`\r\n   }\r\n   return undefined\r\n}","import styles from './FormsControl.module.css'\r\n\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n   let hasError = meta.touched && meta.error\r\n\r\n   return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {meta.touched && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3vb6c\",\"error\":\"FormsControl_error__3Krxq\"};","import styles from './Buttons.module.css'\r\n\r\nconst ButtonGreen = (props) => {\r\n   return (\r\n      <div>\r\n         <button className={styles.buttonGreen}>{props.textButton}</button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ButtonGreen","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGreen\":\"Buttons_buttonGreen__1cbZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__w4wQk\",\"dialogsItems\":\"Dialogs_dialogsItems__2z3A6\",\"dialog\":\"Dialogs_dialog__10H4p\",\"messages\":\"Dialogs_messages__2fyck\",\"message\":\"Dialogs_message__1da__\",\"sendMessage\":\"Dialogs_sendMessage__23Mxe\",\"sendMessageButton\":\"Dialogs_sendMessageButton__2mQ3J\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return connectedAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n   return (\r\n      <div>\r\n         <NavLink to={`/dialogs/${props.id}`} className={styles.dialog}>\r\n            <img src={props.src} alt=\"avatar\" />\r\n            <p>{props.name}</p>\r\n         </NavLink>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={styles.message}>{props.message}</div>\r\n   )\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredWriteSomething } from \"../../Validators/validators\";\r\nimport { TextArea } from \"../common/FormControls/FormsControl\";\r\nimport ButtonGreen from \"../common/ButtonGreen/ButtonGreen\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   let dialogsElements = props.dialogsData\r\n      .map(dialog => <DialogItem name={dialog.name} id={dialog.id} src={dialog.src} key={dialog.id} />)\r\n\r\n   let messagesElements = props.messagesData\r\n      .map(mes => <Message message={mes.message} id={mes.id} key={mes.id} />)\r\n\r\n   let addNewMessage = (values) => {\r\n      props.sendMessageAC(values.newMessageText)\r\n   }\r\n\r\n   if (!props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n   return (\r\n      <div className={styles.dialogs}>\r\n         <div className={styles.dialogsItems}>\r\n            {dialogsElements}\r\n         </div>\r\n\r\n         <div className={styles.messages}>\r\n            {messagesElements}\r\n            <MessageReduxForm onSubmit={addNewMessage} />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <div className={styles.sendMessage}>\r\n         <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <Field\r\n               component={TextArea}\r\n               name=\"newMessageText\"\r\n               value={props.newMessageText}\r\n               placeholder=\"Enter your message\"\r\n               validate={[requiredWriteSomething, maxLength50]} />\r\n            <ButtonGreen textButton=\"Send\" />\r\n\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n   form: 'AddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","// import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageAC } from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      messagesData: state.dialogsPage.messagesData,\r\n      dialogsData: state.dialogsPage.dialogsData,\r\n      newMessageText: state.dialogsPage.newMessageText\r\n   }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//    return {\r\n//       sendMessage: (newMessageBody) => {\r\n//          dispatch(sendMessageAC(newMessageBody))\r\n//       }\r\n//    }\r\n// }\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, { sendMessageAC })\r\n)(Dialogs)"],"sourceRoot":""}