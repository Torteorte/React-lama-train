{"version":3,"sources":["Validators/validators.js","components/common/FormControls/FormsControl.jsx","components/common/FormControls/FormsControl.module.css","components/common/ButtonGreen/ButtonGreen.jsx","components/common/ButtonGreen/Buttons.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","requiredWriteSomething","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","TextArea","restProps","Input","module","exports","ButtonGreen","buttonGreen","textButton","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","onBlur","updateStatus","autoFocus","type","ProfileInfo","profile","src","alt","mainInfo","photos","large","personInfo","aboutMe","fullName","Preloader","Post","s","item","message","likesCounts","maxLength10","MyPostReduxForm","reduxForm","form","action","onSubmit","handleSubmit","Field","component","name","newPostText","validate","MyPosts","PostsElements","postsData","map","post","id","myPosts","values","addPostAC","posts","MyPostsContainer","connect","state","profilePage","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.1efade65.chunk.js","sourcesContent":["export const required = (value) => {\r\n   if (value) return undefined\r\n   return \"Field is required\"\r\n}\r\n\r\nexport const requiredWriteSomething = (value) => {\r\n   if (value) return undefined\r\n   return \" \"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value.length > maxLength) {\r\n      return `Max length is ${maxLength} symbols`\r\n   }\r\n   return undefined\r\n}","import styles from './FormsControl.module.css'\r\n\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n   let hasError = meta.touched && meta.error\r\n\r\n   return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n         <div>\r\n            {props.children}\r\n         </div>\r\n         {meta.touched && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3vb6c\",\"error\":\"FormsControl_error__3Krxq\"};","import styles from './Buttons.module.css'\r\n\r\nconst ButtonGreen = (props) => {\r\n   return (\r\n      <div>\r\n         <button className={styles.buttonGreen}>{props.textButton}</button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ButtonGreen","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGreen\":\"Buttons_buttonGreen__1cbZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInfo\":\"ProfileInfo_mainInfo__aYcwe\",\"personInfo\":\"ProfileInfo_personInfo__3_iSt\",\"aboutMe\":\"ProfileInfo_aboutMe__2e6nF\",\"contacts\":\"ProfileInfo_contacts__3Jj3T\",\"status\":\"ProfileInfo_status__1Cg3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3v5ae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3U-_g\",\"posts\":\"MyPosts_posts__1FSe-\",\"clearButton\":\"MyPosts_clearButton__hXfGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2p-7y\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false)\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   let activatedEditMode = () => {\r\n      setEditMode(true)\r\n   }\r\n\r\n   let deActivatedEditMode = () => {\r\n      setEditMode(false)\r\n      props.updateStatus(status)\r\n   }\r\n\r\n   let onStatusChange = (e) => {\r\n      setStatus(e.target.value)\r\n   }\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n   return (\r\n      <div className={styles.status}>\r\n         {!editMode &&\r\n            <div>\r\n               <span onDoubleClick={activatedEditMode} >{props.status || \"--\"}</span>\r\n            </div>\r\n         }\r\n         {editMode &&\r\n            <div>\r\n               <input onChange={onStatusChange} onBlur={deActivatedEditMode} value={status} autoFocus type=\"text\" />\r\n            </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileStatusHook\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import styles from \"./ProfileInfo.module.css\";\r\n\r\n// class ProfileStatus extends React.Component {\r\n\r\n//    state = {\r\n//       editMode: false,\r\n//       status: this.props.status\r\n//    }\r\n\r\n//    activatedEditMode = () => {\r\n//       this.setState({\r\n//          editMode: true\r\n//       })\r\n//    }\r\n\r\n//    deActivatedEditMode = () => {\r\n//       this.setState({\r\n//          editMode: false\r\n//       })\r\n//       this.props.updateStatus(this.state.status)\r\n//    }\r\n\r\n//    onStatusChange = (e) => {\r\n//       this.setState({\r\n//          status: e.target.value\r\n//       })\r\n//    }\r\n\r\n//    componentDidUpdate(prevProps, prevStatus) {\r\n//       if (prevProps.status !== this.props.status) {\r\n//          this.setState({\r\n//             status: this.props.status\r\n//          })\r\n//       }\r\n//    }\r\n\r\n//    render() {\r\n//       return (\r\n//          <div className={styles.status}>\r\n//             {!this.state.editMode &&\r\n//                <div>\r\n//                   <span onDoubleClick={this.activatedEditMode} >{this.props.status || \"--\"}</span>\r\n//                </div>\r\n//             }\r\n//             {this.state.editMode &&\r\n//                <div>\r\n//                   <input onChange={this.onStatusChange} autoFocus onBlur={this.deActivatedEditMode} type=\"text\" value={this.state.status} />\r\n//                </div>\r\n//             }\r\n//          </div>\r\n//       )\r\n//    }\r\n\r\n// }\r\n\r\n// export default ProfileStatus","import React from 'react';\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from './../../common/Preloader';\r\n// import Contacts from './Contacts/Contacts';\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://city.diia.gov.ua/assets/img/pages/city.jpg\" alt=\"big background foto\" />\r\n            </div>\r\n            <div className={styles.mainInfo}>\r\n                <img src={props.profile.photos.large} alt=\"avatar-foto\" />\r\n\r\n                <div className={styles.personInfo}>\r\n                    <ProfileStatusHook status={props.status} updateStatus={props.updateStatus} />\r\n                    <div className={styles.aboutMe}>{props.profile.aboutMe}</div>\r\n                    {/* <Contacts contacts={props.profile.contacts} /> */}\r\n                </div>\r\n            </div>\r\n            <h2>{props.profile.fullName}</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://image.flaticon.com/icons/png/512/147/147142.png\" alt=\"avatar icon\" />\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likesCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requiredWriteSomething } from '../../../Validators/validators';\r\nimport { TextArea } from '../../common/FormControls/FormsControl';\r\nimport ButtonGreen from '../../common/ButtonGreen/ButtonGreen';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let PostsElements = props.postsData\r\n        .map(post => <Post message={post.message} likesCounts={post.likesCounts} id={post.id} key={post.id} />)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPostAC(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myPosts}>\r\n            <h3>My posts</h3>\r\n\r\n            <MyPostReduxForm onSubmit={addNewPost} />\r\n\r\n            <div className={styles.posts}>\r\n                {PostsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        component={TextArea}\r\n                        name=\"newPostText\"\r\n                        value={props.newPostText}\r\n                        validate={[requiredWriteSomething, maxLength10]} />\r\n                </div>\r\n                <ButtonGreen textButton=\"Add post\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'MyPostForm'\r\n})(MyPostsForm)\r\n\r\nexport default MyPosts","// import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostAC } from '../../../redux/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      postsData: state.profilePage.postsData,\r\n      newPostText: state.profilePage.newPostText\r\n   }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//    return {\r\n//       addPost: (newPostBody) => {\r\n//          dispatch(addPostAC(newPostBody))\r\n//       }\r\n//    }\r\n// }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPostAC })(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport styles from \"./Profile.module.css\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile_reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId\r\n         if (!userId) {\r\n            this.props.history.push(\"/login\")\r\n         }\r\n      }\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.id,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n   withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}